Flexbox notes:
  Flex container: A container that holds flex items and has its own unique properties that can be applied. To make a flex container all you
                  you do is set "display: flex;"

  Flex item: a item that exists in a flex container. A flex item can also be created by setting "display: flex;".

  NOTE: A flex item can also be a flex container. The same goes the other way but just think about it this way. If a element has a parent that
        has the display set to flex it is a flex item and if the element has no parent that has display set to flex and its display is set to flex
        it is a flex container.


More on flex property:
  
  When you define the property "flex: 1;" it actually is short hand for 3 seperate properties. 
  the properties are "flex: flex-grow flex-shrink flex-basis;"

  flex-grow: tells you how much of the container is takes up. if three elements are in a container and all have a flex-grow of 1 they will all
             take up the same amount of space. However, if they containers have a flex gorw of (1, 2, 1) the one with flex-grow 2 will take up 2/3 of
             the container. Think about it as fractions.
  flex-shrink: Lets you specify how much the element should shrink by if it is larger than its parent container.
  flex-basis: Lets you specify the starting size of the flex item. when doing short hand notation "flex: 1" flex-basis is set to 0, however, when it 
              is defined as its own property flex-basis is set to auto. auto makes it look for a width decleration.

  NOTE ON flex-shrink and flex-grow:
    these properties will override the width property if it is given.

Flex Axes:
  There are two axes when using flex, vertical and horizontal.
  
  To set the axes in which flex items are aligned on you use the property:
  
  flex-direction: row, row-reverse (horizontal) or column, column-reverse (vertical)

  Also note, when set to row flex-basis looks for width but when set to column flex-basis looks for height.

  NOTE:
    When switching between row and column for flex-direction if you dont have flex-basis set to auto when using empty divs you wont see anything. 
    The reason being is that empty divs have 0 height so when you change it column and the flex basis is 0 all flex items will have 0 height so 
    you wont be able to see them.

Flex aligning content:
  to align flex items in a flex container we can use the property:

    justify-content:

  justify-content aligns items on the main axis (row), to align items in the cross axis (column) you can use the property:
    
    align-items:

  Note: You can still use align-items when in row or justify-content when in column to have the elements fill the opposite axis

  to further modify the spacing between flex items you can use the property:

    gap: gaps for all sides of flex item
    row-gap: for adding gap on main axis
    column-gap: for adding gap on the cross axis


