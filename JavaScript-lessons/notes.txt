JavaScript notes:

Variables:
    - Think of them as a container
    - Three ways to define a variable
        - var: old school way to define variables but is similar to let.
        - let: Define a normal variable that can be assigned down the road
        - const: Defines a constant that should be changed after being declared
    - Naming convention
        - can only contain letter, numbers and the symbols $ or _
        - camelCase variables that have multiple words
        - case matters! (apple APPLE are two different variables)
    - Constants:
        - Constants should be all upper case if the value is known before running the code
        such as GRAVITY = 9.81;. However, constants that will be assigned during runtime should
        not be labeled with all upper case.

Numbers:
    remainder => x % y;

    NOTE: Incrementing before the variable (++x) rather than after (x++) 
    allows it to instantly increment it then be used where as doing it after 
    the variable will increment it after the variable is used.
    
    Example:
    let x = 1;
    console.log(x++); => logs 1
    console.log(++x); => logs 2

    incrementing variables => x++ or ++x; 
    decrementing variables => x-- or --x;
    exponents => x ** 2
    operator precendence => (in order of most precendence) *, /, +, -

    - when working with number strings you need to convert them first by doing Number(string);
    if you do "74" + 3 it will convert 3 to a string but if we convert it first Number("74") the 
    result will be 77. HOWEVER, working with the operands (*, -, /) will convert the strings to numbers
    automatically. The reason being is those are only use for numbers but the "+" operator is also used for
    string concatenation so that will take precedence.

    - Nan stands for "not a number"
    - infinity can be represented as Infinity or -Infintiy

In depth guide to operands:
    - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#operator_precedence

Data types:
    - Number: represents both integers and floating point numbers (5, 5.00). There are also special numeric

    - BigInt: for numbers greater than -2^53 - 1 to 2^53 - 1.

    - String: you can use "", '', `` to define a string. Backticks allow you to use variables in the string

    - Boolean: true or false 

    - null: nothing, empty, non-existing value

    - undefined: value not assigned.


String methods:
    - str.slice(n, m) -> slices string from n up to m but not including it
    - str.substring(n, m) -> same as slice but cannot take negative indexes
    - str.substr(n, m) -> takes starting index then extracts m number of characters to return
    - str.replace(old_str, new_str) -> replaces first match of given string.
        - this is case sensitive
        - you can pass regular expressions to it and have it replace all matches.
    - str.toUpperCase()
    - str.toLowerCase()
    - str.concat(join_strings_with)
        - strings are immutable, strings cannot be changed only replaced
    - str.trim() -> removes whitespace from start and end of a string.

functions:
    - 


